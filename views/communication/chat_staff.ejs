<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Incident Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            background-color: #eef2f7;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .chat-container {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            width: 500px;
            height: 500px;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .chat-header {
            background-color: #007bff;
            color: white;
            padding: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .chat-header .staff-info {
            display: flex;
            align-items: center;
        }

        .chat-header .staff-info img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .chat-header .staff-info .name {
            font-weight: 600;
            font-size: 16px;
        }

        .chat-header .staff-info .status {
            font-size: 12px;
            color: #e0ffea;
        }

        .messages {
            flex: 1;
            padding: 15px;
            overflow-y: scroll;
            border-bottom: 1px solid #eee;
            display: flex;
            flex-direction: column;
        }

        .message {
            margin-bottom: 15px;
            padding: 10px 15px;
            border-radius: 20px;
            max-width: 75%;
            position: relative;
        }

        .message.incoming {
            background-color: #f1f1f1;
            align-self: flex-start;
        }

        .message.outgoing {
            background-color: #dcf8c6;
            align-self: flex-end;
        }

        .message strong {
            display: block;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .message small {
            position: absolute;
            bottom: -15px;
            right: 10px;
            font-size: 10px;
            color: #888;
        }

        .input-container {
            display: flex;
            padding: 10px;
            background-color: #f9f9f9;
            border-top: 1px solid #eee;
            align-items: center;
        }

        .input-container input {
            flex: 1;
            border-radius: 20px;
            border: 1px solid #ccc;
            padding: 10px;
            margin-right: 10px;
            outline: none;
        }

        .input-container input:focus {
            border-color: #007bff;
        }

        .input-container button {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .input-container button:hover {
            background-color: #0056b3;
        }
    </style>
</head>


<body>
    <div class="chat-container">
        <div class="chat-header">
            <div class="student-info">
                <img src="https://via.placeholder.com/40" alt="Student Profile">
                <div>
                    <div class="name">
                        <%= student ? student.name : 'No Student' %>
                    </div>
                    <div class="status">Online</div>
                </div>
            </div>
        </div>
    
        <div class="messages" id="messages">
            <% if (unreadMessages.length > 0 || previousMessages.length > 0) { %>
                <% 
                    // Combine unread and previous messages for display
                    const allMessages = [...unreadMessages, ...previousMessages];
                %>
                <% allMessages.forEach(message => { %>
                    <div class="message <%= message.is_read ? 'incoming' : 'outgoing' %>">
                        <strong><%= message.sender_name %>:</strong> <%= message.message %>
                        <br><small><%= new Date(message.timestamp).toLocaleString() %></small>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="message">No messages to display.</div>
            <% } %>
        </div>
        
        <div class="input-container">
            <input id="messageInput" type="text" placeholder="Type a message">
            <button onclick="sendMessage()">Send</button>
        </div>
    </div>
    

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Register the staff user on the socket
        const staffInfo = <%- JSON.stringify(user) %>;  // Current logged-in staff
        socket.emit('register', { user_id: staffInfo.user_id, role: 'staff' });

        // Function to send a message
        function sendMessage() {
            const message = messageInput.value.trim(); // Trim whitespace
            if (message) {
                // Emit the message to the server
                socket.emit('chat message', {
                    message,
                    sender: staffInfo,  
                    receiver: student  
                });
                messageInput.value = ''; 
            }
        }

        // Listen for new chat messages
        socket.on('chat message', (data) => {
            const { user, message, timestamp } = data;

            const messageElement = document.createElement('div');
            messageElement.classList.add('message', 'incoming'); // Incoming for the staff
            messageElement.innerHTML = `<strong>${user.name}:</strong> ${message} <br><small>${new Date(timestamp).toLocaleString()}</small>`;

            const messagesDiv = document.getElementById('messages');
            messagesDiv.appendChild(messageElement);
            messagesDiv.scrollTop = messagesDiv.scrollHeight; // Auto-scroll
        });
    </script>
</body>
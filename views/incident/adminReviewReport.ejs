<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Incident Reports Review</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
  <style>
    /* General page styles */
    body {
      background-color: #f4f6f9;
      font-family: 'poppins', 'Arial', sans-serif;
      color: #333;
      padding: 20px;
    }

    h2 {
      color: #4a4a4a;
      font-weight: 600;
      margin-bottom: 20px;
    }

    .container {
      max-width: 1200px;
      margin: auto;
      background: #ffffff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Table styles */
    .table {
      border-collapse: separate;
      border-spacing: 0 8px;
    }

    .table thead th {
      background-color: #6c757d;
      color: #ffffff;
      font-weight: 500;
      padding: 12px;
      text-align: center;
      border-top: none;
    }

    .table tbody tr {
      background: #f9f9fb;
      transition: transform 0.2s;
      border-radius: 8px;
    }

    .table tbody tr:hover {
      transform: translateY(-3px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .table tbody td {
      padding: 12px;
      text-align: center;
      border-top: none;
    }

    .evidence-link {
      color: #007bff;
      text-decoration: none;
    }

    .evidence-link:hover {
      text-decoration: underline;
    }

    /* Button styling */
    .btn-primary {
      background-color: #4a90e2;
      border-color: #4a90e2;
    }

    .btn-primary:hover {
      background-color: #357ab8;
      border-color: #357ab8;
    }

    /* Modal styling */
    .modal-header {
      background-color: #4a90e2;
      color: #ffffff;
      border-bottom: none;
    }

    .modal-title {
      font-weight: 600;
    }

    .modal-content {
      border-radius: 8px;
    }

    .modal-body {
      padding-top: 16px;
    }

    .form-select,
    .form-control {
      border-radius: 6px;
    }

    .modal-footer .btn-primary {
      background-color: #4a90e2;
      border-color: #4a90e2;
    }

    .modal-footer .btn-primary:hover {
      background-color: #357ab8;
      border-color: #357ab8;
    }

    .form-label {
      font-weight: 500;
      color: #333;
    }

    .back-button-container {
      text-align: left;
      margin-bottom: 30px;
    }

    .back-button {
      font-size: 16px;
      color: #6c757d;
    }

    .back-button i {
      margin-right: 5px;
    }
  </style>
</head>

<body>
  <!-- Toast Notification -->
  <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer">
    <div id="assignmentToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body">
          Incident successfully assigned to staff.
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  </div>

  <div class="container">
    <div class="back-button-container">
      <a href="/dashboards/admin_dashboard" class="back-button">
        <i class="fas fa-arrow-left"></i> Back to Administrator Dashboard
      </a>
    </div>
    <h2>Incident Reports Review</h2>
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Title</th>
          <th>Description</th>
          <th>Date</th>

          <th>Category</th>
          <th>Reporter</th>
          <th>Evidence</th>
          <th>Map Location</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <% if (incidentReports.length > 0) { %>
        <% incidentReports.forEach(report => { %>
        <tr>
          <td><%= report.title %></td>
          <td><%= report.description %></td>
          <td><%= report.date %></td>

          <td><%= report.category %></td>
          <td><%= report.reporter_name %></td>
          <td>
            <% const evidenceFiles = JSON.parse(report.evidence); %>
            <% evidenceFiles.forEach(file => { %>
            <a href="/<%= file %>" target="_blank" class="evidence-link">View Evidence</a><br>
            <% }) %>
          </td>
          <td>
            <% if (report.latitude && report.longitude) { %>
            <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#mapModal" onclick="setMapLocation(<%= report.latitude %>, <%= report.longitude %>)">View Map</button>
            <% } else { %>
            <span>No Location</span>
            <% } %>
          </td>
          <td>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#assignModal" onclick="setReportId(<%= report.id %>)">Take Action</button>
          </td>
        </tr>
        <% }) %>
        <% } else { %>
        <tr>
          <td colspan="9" class="text-center">No new incident reports to review.</td>
        </tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <!-- Modal for viewing Google Map location -->
  <!-- Map Modal -->
  <div class="modal fade" id="mapModal" tabindex="-1" aria-labelledby="mapModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="mapModalLabel">Incident Location</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!-- Map Container -->
          <div id="mapContainer" style="width: 100%; height: 400px;"></div>
        </div>
      </div>
    </div>
  </div>


  <!-- Modal for assigning incident report -->
  <div class="modal fade" id="assignModal" tabindex="-1" aria-labelledby="assignModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="assignModalLabel">Assign Incident to Staff</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/assign-incident" method="POST">
          <div class="modal-body">
            <input type="hidden" name="reportId" id="reportId">
            <input type="hidden" name="latitude" id="latitude">
            <input type="hidden" name="longitude" id="longitude">

            <div class="mb-3">
              <label for="staffId" class="form-label">Assign to Staff</label>
              <select class="form-select" name="staffId" required>
                <% staffMembers.forEach(staff => { %>
                <option value="<%= staff.user_id %>"><%= staff.name %></option>
                <% }) %>
              </select>
            </div>
            <div class="mb-3">
              <label for="severity" class="form-label">Severity</label>
              <select class="form-select" name="severity" required>
                <option value="Low">Low</option>
                <option value="Medium">Medium</option>
                <option value="High">High</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="adminDescription" class="form-label">Description for Staff</label>
              <textarea class="form-control" id="adminDescription" name="adminDescription" rows="3" placeholder="Add additional details"></textarea>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Assign Incident</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0RxjWr1Chsnf_9FbzvYWdR3jsoZTgOXM&callback=initMap" async defer></script>

  <script>
    // Function to set the report ID in the hidden input
    function setReportId(reportId) {
      document.getElementById('reportId').value = reportId;
    }

    // Global variable to store the Google Map instance
    let map;
    let marker; // To store the marker and remove it before adding a new one

    // Function to initialize the map
    function initMap() {
      map = new google.maps.Map(document.getElementById('mapContainer'), {
        center: {
          lat: 8.654412978895445,
          lng: 81.21285877391897
        }, // Default center
        zoom: 15,
      });
    }

    // Function to set Google Map location
    function setMapLocation(latitude, longitude) {
      // Check if the map is initialized
      if (!map) {
        console.error('Map is not initialized');
        return;
      }

      // Set the map view to the given latitude and longitude
      map.setCenter({
        lat: latitude,
        lng: longitude
      });

      // If the marker exists, remove it before adding a new one
      if (marker) {
        marker.setMap(null);
      }

      // Add a new marker at the specified coordinates
      marker = new google.maps.Marker({
        position: {
          lat: latitude,
          lng: longitude
        },
        map: map,
        title: 'Incident Location'
      });

      // Open a simple info window when the marker is clicked
      const infowindow = new google.maps.InfoWindow({
        content: '<h5>Incident Location</h5>',
      });

      marker.addListener('click', function() {
        infowindow.open(map, marker);
      });
      document.getElementById('latitude').value = latitude;
      document.getElementById('longitude').value = longitude;
    }

    // Check if "assigned" parameter is in URL to show toast notification
    document.addEventListener('DOMContentLoaded', function() {
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has('assigned')) {
        const toastElement = document.getElementById('assignmentToast');
        const toast = new bootstrap.Toast(toastElement);
        toast.show();
      }
    });
  </script>

  <!-- Bootstrap 5 Toast HTML -->
  <div class="toast" id="assignmentToast" data-bs-delay="3000">
    <div class="toast-header">
      <strong class="me-auto">Assignment Status</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Incident has been assigned successfully!
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>